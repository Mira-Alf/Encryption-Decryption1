type: edu
custom_name: stage4
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {
        public EncryptDecryptTest() {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-data", "Welcome to hyperskill!"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-data", "Hello"
                    )
                    .setAttach("Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-data", "012345678",
                        "-mode", "enc"
                    )
                    .setAttach("123456789"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-data", "Hi"
                    )
                    .setAttach("Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-data", "222233334444"
                    )
                    .setAttach("111122223333")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            return new CheckResult(reply.trim().equals(clue.trim()));
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    import java.util.Scanner;

    public class Main {

        private static final char[] LOWER_CASE = new char[26];
        static {
            int index = 0;
            for( char ch = 'a'; ch <= 'z'; ch++ ) {
                LOWER_CASE[index] =ch;
                index++;
            }
        }

        public static Operation getOperation( String operation ) {
            for( Operation op : Operation.values() ) {
                if( op.getName().equals(operation) )
                    return op;
            }
            return null;
        }

        public static String transform( String originalText, int shiftKey, Operation op ) {
            char[] transformedChars = new char[originalText.length()];
            int index = 0;
            for( char ch : originalText.toCharArray() ) {
                int codeUnit = op == Operation.ENC ? ch + shiftKey : ch - shiftKey;
                transformedChars[index] = (char) codeUnit;
                index++;
            }
            return String.valueOf(transformedChars);
        }

        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            Operation op = getOperation(scanner.nextLine());
            if( op != null ) {
                String originalText = scanner.nextLine();
                int shiftKey = scanner.nextInt();
                String transformedText = transform( originalText, shiftKey, op );
                System.out.println(transformedText);
            }
        }
    }
    enum Operation {
        ENC("enc"), DEC("dec");
        private String name;
        Operation(String name) {
            this.name = name;
        }
        public String getName() {
            return this.name;
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/248/implement
status: Solved
record: 3
